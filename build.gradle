apply plugin: "java"
apply plugin: "application"
apply plugin: "maven"
apply plugin: "signing"
apply plugin: "jacoco"
apply plugin: "kotlin"
apply plugin: "org.jetbrains.dokka"

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = "io.github.subiyacryolite"
version = "4.0.0e-SNAPSHOT" //majorv.minorv.bugfixincrement
archivesBaseName = project.name
description = "A dynamic, cross platform, high performance, ORM data-mapper. Designed to assist in rapid development and data mining"
[compileJava, compileTestJava]*.options*.encoding = "UTF-8"

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")
ext.jacksonVersion = '2.9.1'
ext.kotlinVersion = '1.1.51'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.1.51"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.15"
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://maven.atlassian.com/3rdparty/" }
    maven { url "http://clojars.org/repo/" }
}

dependencies {
    compile 'org.jetbrains.kotlin:kotlin-stdlib-jre8:1.1.51'
    testCompile 'org.jetbrains.kotlin:kotlin-test:1.1.51'
    testCompile 'com.fasterxml.jackson.core:jackson-databind:2.9.1'
    testCompile 'com.fasterxml.jackson.core:jackson-databind:2.9.1'
    testCompile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.1'
    testCompile 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.9.1'
    testCompile 'org.xerial:sqlite-jdbc:3.16.1'
    testCompile 'com.microsoft.sqlserver:mssql-jdbc:6.1.0.jre8'
    testCompile 'org.postgresql:postgresql:42.0.0'
    testCompile 'mysql:mysql-connector-java:6.0.6'
    testCompile 'com.oracle:ojdbc6:12.1.0.1-atlassian-hosted'
    testCompile('org.junit.jupiter:junit-jupiter-api:5.0.0')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.0.0')
}

jar {
    from configurations.runtime
    manifest {
        attributes(
                "Implementation-Title": "Jenesis Data Store",
                "Implementation-Version": project.version,
                "Created-By": "${System.getProperty("java.version")} (${System.getProperty("java.specification.vendor")})",
        )
    }
}

test {
    //prevent problems with TravisCI
    exclude "**"
}

dokka {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
}

task javadocJar(type: Jar) {
    classifier = "javadoc"
    from dokka
}

task sourceJar(type: Jar) {
    classifier = "sources"
    from sourceSets.main.allJava
}

artifacts {
    archives javadocJar, sourceJar
}

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                authentication(userName: hasProperty("ossrhUsername") ? ossrhUsername : "", password: hasProperty("ossrhPassword") ? ossrhPassword : "")
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: hasProperty("ossrhUsername") ? ossrhUsername : "", password: hasProperty("ossrhPassword") ? ossrhPassword : "")
            }
            pom.project {
                name "Jenesis Data Store"
                packaging "jar"
                description = project.description
                url "https://github.com/SubiyaCryolite/Jenesis-Data-Store"
                scm {
                    connection "scm:git:git@github.com:SubiyaCryolite/Jenesis-Data-Store.git"
                    developerConnection "scm:git:git@github.com:SubiyaCryolite/Jenesis-Data-Store.git"
                    url "https://github.com/SubiyaCryolite/Jenesis-Data-Store"
                }
                licenses {
                    license {
                        name "The 3-Clause BSD License"
                        url "https://opensource.org/licenses/BSD-3-Clause"
                    }
                }
                developers {
                    developer {
                        id "SubiyaCryolite"
                        name "Ifunga Ndana"
                        email "ifungandana@gmail.com"
                    }
                }
            }
        }
    }
}